{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import ArticleList from '../components/ArticleList';\n// import articleContent from './article-content';\n// import NotFoundPage from './NotFoundPage';\n// const ArticlePage = ({ match }) => {\n//     const name = match.params.name;\n//     const article = articleContent.find(article => article.name === name);\n//     const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const result = await fetch(`/api/articles/${name}`);\n//             const body = await result.json();\n//             console.log(body);\n//             setArticleInfo(body);\n//         }\n//         fetchData();\n//     }, [name]);\n//     if (!article) return <NotFoundPage />\n//     const otherArticles = articleContent.filter(article => article.name !== name);\n//     return (\n//         <>\n//             <h1>{article.title}</h1>\n//             <p>This post has been upvoted {articleInfo.upvotes} times</p>\n//             {article.content.map((paragraph, key) => (\n//                 <p key={key}>{paragraph}</p>\n//             ))}\n//             <h3>Other Articles:</h3>\n//             <ArticleList articles={otherArticles} />\n//         </>\n//     );\n// }\n// export default ArticlePage;","map":{"version":3,"sources":["/media/rimon/Works/Fulda/Coding/my-blog/my-blog-frontend/src/pages/ArticlePage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ArticleList from '../components/ArticleList';\n// import articleContent from './article-content';\n// import NotFoundPage from './NotFoundPage';\n\n// const ArticlePage = ({ match }) => {\n//     const name = match.params.name;\n//     const article = articleContent.find(article => article.name === name);\n\n//     const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const result = await fetch(`/api/articles/${name}`);\n//             const body = await result.json();\n//             console.log(body);\n//             setArticleInfo(body);\n//         }\n//         fetchData();\n//     }, [name]);\n    \n//     if (!article) return <NotFoundPage />\n\n//     const otherArticles = articleContent.filter(article => article.name !== name);\n\n//     return (\n//         <>\n//             <h1>{article.title}</h1>\n//             <p>This post has been upvoted {articleInfo.upvotes} times</p>\n//             {article.content.map((paragraph, key) => (\n//                 <p key={key}>{paragraph}</p>\n//             ))}\n//             <h3>Other Articles:</h3>\n//             <ArticleList articles={otherArticles} />\n//         </>\n//     );\n// }\n\n// export default ArticlePage;"]},"metadata":{},"sourceType":"module"}