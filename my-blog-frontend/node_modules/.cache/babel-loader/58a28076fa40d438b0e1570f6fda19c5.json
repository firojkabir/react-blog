{"ast":null,"code":"var _jsxFileName = \"/media/rimon/Works/Fulda/Coding/my-blog/my-blog-frontend/src/pages/ArticlePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport ArticleList from '../components/ArticleList';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\n\nconst ArticlePage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    setArticleInfo({\n      upvotes: 3\n    });\n  });\n  if (!article) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  });\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, article.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"This post has been upvoted \", articleInfo.upvotes, \" times\"), article.content.map((paragraph, key) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Other Articles:\"), /*#__PURE__*/React.createElement(ArticleList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ArticlePage;","map":{"version":3,"sources":["/media/rimon/Works/Fulda/Coding/my-blog/my-blog-frontend/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","ArticleList","articleContent","NotFoundPage","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGN,cAAc,CAACO,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAd;AACH,GAFQ,CAAT;AAIA,MAAI,CAACJ,OAAL,EAAc,oBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,QAAMM,aAAa,GAAGZ,cAAc,CAACa,MAAf,CAAsBP,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AAEA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAO,CAACQ,KAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BN,WAAW,CAACE,OAA3C,WAFJ,EAGKJ,OAAO,CAACS,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,SAAd,CADH,CAHL,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,eAOI,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEL,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH,CAzBD;;AA2BA,eAAeV,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ArticleList from '../components/ArticleList';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        setArticleInfo({ upvotes: 3 });\n    })\n    \n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n            <h1>{article.title}</h1>\n            <p>This post has been upvoted {articleInfo.upvotes} times</p>\n            {article.content.map((paragraph, key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <h3>Other Articles:</h3>\n            <ArticleList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}