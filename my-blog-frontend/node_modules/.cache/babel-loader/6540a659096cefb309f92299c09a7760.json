{"ast":null,"code":"var _jsxFileName = \"/media/rimon/Works/Fulda/Coding/my-blog/my-blog-frontend/src/pages/ArticlePage.js\";\n// import React, { useState, useEffect } from 'react';\n// import ArticleList from '../components/ArticleList';\n// import articleContent from './article-content';\n// import NotFoundPage from './NotFoundPage';\n// const ArticlePage = ({ match }) => {\n//     const name = match.params.name;\n//     const article = articleContent.find(article => article.name === name);\n//     const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const result = await fetch(`/api/articles/${name}`);\n//             const body = await result.json();\n//             console.log(body);\n//             setArticleInfo(body);\n//         }\n//         fetchData();\n//     }, [name]);\n//     if (!article) return <NotFoundPage />\n//     const otherArticles = articleContent.filter(article => article.name !== name);\n//     return (\n//         <>\n//             <h1>{article.title}</h1>\n//             <p>This post has been upvoted {articleInfo.upvotes} times</p>\n//             {article.content.map((paragraph, key) => (\n//                 <p key={key}>{paragraph}</p>\n//             ))}\n//             <h3>Other Articles:</h3>\n//             <ArticleList articles={otherArticles} />\n//         </>\n//     );\n// }\n// export default ArticlePage;\nimport React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  });\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, article.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"This post has been upvoted \", articleInfo.upvotes, \" times\"), article.content.map((paragraph, key) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Other Articles:\"), /*#__PURE__*/React.createElement(ArticlesList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ArticlePage;","map":{"version":3,"sources":["/media/rimon/Works/Fulda/Coding/my-blog/my-blog-frontend/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","ArticlesList","NotFoundPage","articleContent","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","console","log","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGL,cAAc,CAACM,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBV,IAAK,EAAvB,CAA1B;AACA,YAAMW,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KALD;;AAMAH,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACR,IAAD,CARM,CAAT;AAUA,MAAI,CAACE,OAAL,EAAc,oBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,QAAMa,aAAa,GAAGlB,cAAc,CAACmB,MAAf,CAAsBd,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AAEA,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAO,CAACe,KAAb,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+Bb,WAAW,CAACE,OAA3C,WAFA,EAGCJ,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,SAAd,CADH,CAHD,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANA,eAOA,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEL,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADJ;AAWH,CA/BD;;AAiCA,eAAejB,WAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ArticleList from '../components/ArticleList';\n// import articleContent from './article-content';\n// import NotFoundPage from './NotFoundPage';\n\n// const ArticlePage = ({ match }) => {\n//     const name = match.params.name;\n//     const article = articleContent.find(article => article.name === name);\n\n//     const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const result = await fetch(`/api/articles/${name}`);\n//             const body = await result.json();\n//             console.log(body);\n//             setArticleInfo(body);\n//         }\n//         fetchData();\n//     }, [name]);\n    \n//     if (!article) return <NotFoundPage />\n\n//     const otherArticles = articleContent.filter(article => article.name !== name);\n\n//     return (\n//         <>\n//             <h1>{article.title}</h1>\n//             <p>This post has been upvoted {articleInfo.upvotes} times</p>\n//             {article.content.map((paragraph, key) => (\n//                 <p key={key}>{paragraph}</p>\n//             ))}\n//             <h3>Other Articles:</h3>\n//             <ArticleList articles={otherArticles} />\n//         </>\n//     );\n// }\n\n// export default ArticlePage;\n\n\nimport React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            console.log(body);\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n        <h1>{article.title}</h1>\n        <p>This post has been upvoted {articleInfo.upvotes} times</p>\n        {article.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <h3>Other Articles:</h3>\n        <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}